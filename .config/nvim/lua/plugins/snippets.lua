return {
  {
    "rafamadriz/friendly-snippets",
    config = function()
      require("luasnip.loaders.from_vscode").lazy_load()
    end
  },
  {
    "L3MON4D3/LuaSnip",
     dependencies = {
      "rafamadriz/friendly-snippets"
    },
    keys = function()
      return {}
    end,
    config = function()
      local ls = require("luasnip")
      local s = ls.snippet
      local t = ls.text_node
      local i = ls.insert_node
      require("luasnip.loaders.from_vscode").lazy_load()
      ls.add_snippets("cpp", {
        s("leetcode", {
          t({ "#include <bits/stdc++.h>", "" }),
          t({ "using namespace std;", "" }),
          t({ "", "" }),
          t({ "class Solution {", "public:" }),
          t({ "    " }),
          i(1, "ReturnType"),
          t({ " " }),
          i(2, "functionName"),
          t({ "(" }),
          i(3, "Parameters"),
          t({ ") {", "        " }),
          i(4, "// Your solution here"),
          t({ "", "        return " }),
          i(5, "result"),
          t({ ";", "    }", "}", "" }),
          t({ "// Test", "int main() {", "    Solution solution;", "    " }),
          i(6, "// Test cases"),
          t({ "", "    return 0;", "}" }),
        }),
        s("Hello world", {
          t({ "#include <iostream>", "" }),
          t({ "", "" }),
          t({ "int main()", "" }),
          t({ "{", "" }),
          t({ '  std::cout << "Hello, world!" << std::endl;', "" }),
          t({ "  return 0;", "" }),
          t({ "}" }),
        }),
        s("competitive_progg", {
          t({ " #include <bits/stdc++.h>", "" }),
          t({ "using namespace std;", "" }),
          t({
            "",
            "/* clang-format off */",
            "",
            "/* TYPES  */",
            "#define ll long long",
            "#define pii pair<int, int>",
            "#define pll pair<long long, long long>",
            "#define vi vector<int>",
            "#define vll vector<long long>",
            "#define mii map<int, int>",
            "#define si set<int>",
            "#define sc set<char>",
            "",
            "/* FUNCTIONS */",
            "#define f(i,s,e) for(long long int i=s;i<e;i++)",
            "#define cf(i,s,e) for(long long int i=s;i<=e;i++)",
            "#define rf(i,e,s) for(long long int i=e-1;i>=s;i--)",
            "#define pb push_back",
            "#define eb emplace_back",
            "",
            "/* PRINTS */",
            "template <class T>",
            'void print_v(vector<T> &v) { cout << "{"; for (auto x : v) cout << x << ","; cout << "\\b}"; }',
            "",
            "/* UTILS */",
            "#define MOD 1000000007",
            "#define PI 3.1415926535897932384626433832795",
            "#define read(type) readInt<type>()",
            "ll min(ll a,int b) { if (a<b) return a; return b; }",
            "ll min(int a,ll b) { if (a<b) return a; return b; }",
            "ll max(ll a,int b) { if (a>b) return a; return b; }",
            "ll max(int a,ll b) { if (a>b) return a; return b; }",
            "ll gcd(ll a,ll b) { if (b==0) return a; return gcd(b, a%b); }",
            "ll lcm(ll a,ll b) { return a/gcd(a,b)*b; }",
            "string to_upper(string a) { for (int i=0;i<(int)a.size();++i) if (a[i]>='a' && a[i]<='z') a[i]-='a'-'A'; return a; }",
            "string to_lower(string a) { for (int i=0;i<(int)a.size();++i) if (a[i]>='A' && a[i]<='Z') a[i]+='a'-'A'; return a; }",
            "bool prime(ll a) { if (a==1) return 0; for (int i=2;i<=round(sqrt(a));++i) if (a%i==0) return 0; return 1; }",
            'void yes() { cout<<"YES\\n"; }',
            'void no() { cout<<"NO\\n"; }',
            "",
            "/*  All Required define Pre-Processors and typedef Constants */",
            "typedef long int int32;",
            "typedef unsigned long int uint32;",
            "typedef long long int int64;",
            "typedef unsigned long long int  uint64;",
            "",
            "/* clang-format on */",
            "void solve()",
            "{",
            "    ",
          }),
          i(1, "// logic"),
          t({
            "",
            "}",
            "",
            "/* Main()  function */",
            "int main()",
            "{",
            "",
            "cin.tie(NULL);",
            "ios_base::sync_with_stdio(false);",
            "#define ONLINE_JUDGE",
            "    #ifndef ONLINE_JUDGE",
            '    freopen("input.txt","r",stdin);',
            '    //freopen("output.txt","w",stdout);',
            "    #endif",
            "",
            "    int tc;",
            "    cin >> tc;",
            "",
            "    while (tc--) {",
            "        solve();",
            "    }",
            "    return 0;",
            "}",
          }),
        }),
      })
    end,
  },
}
